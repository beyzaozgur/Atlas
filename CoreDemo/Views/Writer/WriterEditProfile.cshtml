@model CoreDemo.ViewModels.AddUpdateWriterModel

@{
	ViewData["Title"] = "WriterEditProfile";
	Layout = "~/Views/Shared/WriterLayout.cshtml";
}

@using (Html.BeginForm("WriterEditProfile", "Writer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	<div class="col-12 grid-margin stretch-card">
		<div class="card">
			<div class="card-body">
				<h4 class="card-title">Edit Profile</h4>
				@Html.HiddenFor(x => x.WriterID)
				<div class="form-group">
					<label for="inputName">Name Surname</label>
					@Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
				</div>
				<div class="form-group">
					<label for="inputEmail">Email address</label>
					@Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
				</div>
				<div class="form-group">
					<label for="inputCity">Şehir</label>
					@* @Html.DropDownListFor(model => model.WriterCity, Model.CityList, new { @class = "form-control", id = "inputCityId", required = "required" }) *@
					<select class="form-control" id="inputCitySelect" name="WriterCity">
					</select>
				</div>
				<div class="form-group">
					<label>Profile Picture</label>
					<input class="file-upload-default" type="file" name="WriterImage" id="formFile" accept="image/*">
					<div class="input-group col-xs-12">
						<input type="text" class="form-control file-upload-info" disabled placeholder="@Model.WriterImageUrl" name="WriterImage">
						<span class="input-group-append">
							<button class="file-upload-browse btn btn-gradient-primary" type="button">Upload</button>
						</span>
					</div>
				</div>
				<div class="form-group">
					<img width="150" height="150" id="imagePreview" src="~/WriterImageFiles/@Model.WriterImageUrl" />
				</div>
				<div class="form-group">
					<label for="exampleTextarea1">About</label>
					@Html.TextAreaFor(x => x.WriterAbout, 10, 3, new { @class = "form-control" })
				</div>
				<button type="submit" class="btn btn-gradient-primary mr-2">Update</button>
				<button class="btn btn-light">Cancel</button>
			</div>
		</div>
	</div>
}

<script src="~/coreblogtema/web/js/jquery-2.2.3.min.js"></script>
<script src="~/js/cities.js"></script>
<script>
	(function ($) {
		'use strict';
		$(function () {
			$('.file-upload-browse').on('click', function () {
				var file = $(this).parent().parent().parent().find('.file-upload-default');
				file.trigger('click');
			});
			$('.file-upload-default').on('change', function () {
				$(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
			});
		});
	})(jQuery);

	function handleFileSelect(event) {
		const selectedFile = event.target.files[0];

		if (selectedFile) {
			const reader = new FileReader();

			reader.onload = function (e) {
				$('#imagePreview').attr('src', e.target.result);
			};

			reader.readAsDataURL(selectedFile);
		}
	}

	$(document).ready(function () {
		$('#formFile').on('change', handleFileSelect);

		var cityList = getCities();

		//console.log(cityList);

		console.log('City: ' + '@Model.WriterCity');

		for (var i = 0; i < cityList.length; i++) {

			if (cityList[i] == '@Model.WriterCity') {
				var option = $('<option value="' + cityList[i] + '" selected>' + cityList[i] + '</option>');
			}
			else
			{
				var option = $('<option value="' + cityList[i] + '">' + cityList[i] + '</option>');
			}
			

			$("#inputCitySelect").append(option);
		}
	});
</script>