@model CoreDemo.ViewModels.RegisterViewModel

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/UserLayout.cshtml";
}
<link href="~/css/site.css" rel="stylesheet" />

<section class="main-content-w3layouts-agileits">
	<div class="container">
		<h3 class="tittle">Register</h3>
		<div class="inner-sec">
			<div class="login p-5 bg-light mx-auto mw-100">
				@using (Html.BeginForm("Index", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					<div class="form-row">
						<div class="col-md-6 mb-3">
							<label for="validationCustom01">Name Surname</label>
							@Html.TextBoxFor(x => x.NameSurname, new { @class = "form-control" })
							@Html.ValidationMessageFor(x => x.NameSurname, "", new { @class = "text-danger" })
							@*							<input type="text" class="form-control" id="validationDefault01" name="WriterName" placeholder="" required="">
						*@
						</div>
						<div class="col-md-6 mb-3">
							<label for="validationCustom02">Email</label>
							@Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
							@Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
							@*							<input type="text" class="form-control" id="validationDefault02" name="WriterMail" placeholder="" required="">
						*@
						</div>
					</div>
					<div class="form-row">
						<div class="form-group col-md-6">
							<label for="exampleInputPassword1 mb-2">Password</label>
							@Html.PasswordFor(x => x.Password, new { @class = "form-control" })
							@Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
							@*							<input type="password" class="form-control" id="password1" name="WriterPassword" placeholder="" required="">
						*@
						</div>
						<div class="form-group col-md-6">
							<label for="exampleInputPassword2 mb-2">Password Again</label>
							@Html.PasswordFor(x => x.PasswordAgain, new { @class = "form-control" })
							@Html.ValidationMessageFor(x => x.PasswordAgain, "", new { @class = "text-danger" })
							@*							<input type="password" class="form-control" id="password2" name="ConfirmPassword" placeholder="" required="">
						*@
						</div>
					</div>
					<div class="form-row">
						<div class="col-md-6 mb-3">
							<label for="cityComboBox">City</label>
							<label for="inputCity">Şehir</label>
							<select class="form-control" id="citySelect" name="City" placeholder="" required="">
								<option value=""></option>
							</select>
						</div>
						<div class="form-group col-md-5 mb-3">
							@* <label for="formFile" class="form-label">Profile Picture</label>
						<input class="form-control" type="file" name="WriterImage" id="formFile" accept="image/*"> *@
							<label>Profile Picture</label>
							<input class="file-upload-default" type="file" placeholder="Upload Image" name="ImageUrl" id="formFile" accept="image/*">
							<div class="input-group col-xs-12">
								<input type="text" class="form-control file-upload-info" disabled name="ImageUrl">
								<span class="input-group-append">
									<button class="file-upload-browse btn btn-primary read-m" type="button">Upload</button>
								</span>
							</div>
							@Html.ValidationMessageFor(x => x.ImageUrl, "", new { @class = "text-danger" })
						</div>
						<div class="form-group col-md-1 mb-3">
							<img width="75" height="75" id="imagePreview" src="~/Images/default-user-image.png" />
						</div>
					</div>
					<div class="form-row">
						<div class="col-md-6 mb-3">
							<div class="form-check mb-2">
								<input type="checkbox" class="form-check-input" id="approveCheck">
								<a id="terms">I have read all the terms and conditions and I accept them.</a>
							</div>
						</div>
					</div>
					<div class="text-danger" asp-validation-summary="ModelOnly">
					</div>
					<br />
					<button type="submit" id="submitBtn" class="btn btn-primary read-m">Register</button>
				}
			</div>
		</div>
	</div>
	<br />
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="~/coreblogtema/web/js/jquery-2.2.3.min.js"></script>
	<script src="~/js/terms.js"></script>
	<script src="~/js/cities.js"></script>

	<script>
		(function ($) {
			'use strict';
			$(function () {
				$('.file-upload-browse').on('click', function () {
					var file = $(this).parent().parent().parent().find('.file-upload-default');
					file.trigger('click');
				});
				$('.file-upload-default').on('change', function () {
					$(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
				});
			});
		})(jQuery);

		function handleFileSelect(event) {
			const selectedFile = event.target.files[0];

			if (selectedFile) {
				const reader = new FileReader();

				reader.onload = function (e) {
					$('#imagePreview').attr('src', e.target.result);
				};

				reader.readAsDataURL(selectedFile);
			}
		}

		var termsAndConditions = getTermsAndConditions();

		function showTermsAndConditions() {
			Swal.fire({
				title: "Terms and Conditions",
				html: termsAndConditions
			});
		}

		$(document).ready(function () {
			$('#formFile').on('change', handleFileSelect);
			$('#terms').on('click', showTermsAndConditions);

			document.getElementById("submitBtn").addEventListener("click", function (event) {

				var checkbox = document.getElementById("approveCheck");

				if (!checkbox.checked) {
					event.preventDefault();
					Swal.fire({
						title: "Error",
						text: "You need to read and agree the terms and conditions.",
						icon: "error"
					});
				}
			});

			var cityList = getCities();

			for (var i = 0; i < cityList.length; i++) {

				var option = $('<option value="' + cityList[i] + '">' + cityList[i] + '</option>');

				$("#citySelect").append(option);
			}
		});
	</script>
</section>